name: Weekly Dependabot Nudge
on:
  schedule:
    # Run at 9am UTC every Monday
    - cron: "0 9 * * 1"
  workflow_dispatch:
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: '20.x'
      - id: npm
        run: cd ${{ github.workspace }}; npm ci
        shell: bash
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          SLACK_TOKEN: ${{ secrets.HOTSPOTS_SLACK_TOKEN }}
          SLACK_CHANNEL: '#secops-hotspots'
          GH_TO_SLACK_USER_MAP: ${{ secrets.GH_TO_SLACK_USER_MAP }}
          DEBUG: false
        with:
          github-token: ${{ secrets.DEPENDABOT_NUDGE_GITHUB_TOKEN }}
          script: |
            const debug = process.env.DEBUG === 'true';
            const { default: sendSlackMessage } = await import('${{ github.workspace }}/src/sendSlackMessage.js');
            const { default: dependabotNudge } = await import('${{ github.workspace }}/src/dependabotNudge.js');

            let githubToSlack = {};
            try {
              githubToSlack = JSON.parse(process.env.GH_TO_SLACK_USER_MAP);
            } catch (e) {
              if (debug) console.log('GH_TO_SLACK_USER_MAP is not valid JSON');
            }

            // set minlevel to 'medium' if it's the first Monday of the month, otherwise stick to high or critical issues
            let minlevel = 'medium';
            const today = new Date();
            if (today.getDate() > 7) {
              if (debug)
                console.log('Not the first Monday of the month!');
              minlevel = 'high';
            }

            let messages = await dependabotNudge({debug, org: process.env.GITHUB_REPOSITORY_OWNER, github: github, minlevel: minlevel, githubToSlack: githubToSlack});

            if (messages.length > 50) {
              messages = messages.slice(0, 49);
              messages.push('... and more!');
            }

            for (const message of messages) {
              try {
                await sendSlackMessage({debug, username: 'dependabot', message: message, channel: process.env.SLACK_CHANNEL, token: process.env.SLACK_TOKEN});
              } catch (error) {
                if (debug)
                  console.log(error);
              }
            }
