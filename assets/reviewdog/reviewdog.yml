runner:
  semgrep:
    name: semgrep
    cmd: |
      set -e
      (semgrep \
          -c $SCRIPTPATH/semgrep_rules/generated/oss/vulns.yaml \
          -c $SCRIPTPATH/semgrep_rules/generated/nonfree/vulns.yaml \
          -c $SCRIPTPATH/semgrep_rules/generated/oss/audit.yaml \
          -c $SCRIPTPATH/semgrep_rules/generated/nonfree/audit.yaml \
          $(find $SCRIPTPATH/semgrep_rules -name '*.yml' -or -name '*.yaml' -not -path "$SCRIPTPATH/semgrep_rules/generated/*" | sed 's/^/-c /g') \
          --metrics=off \
          --quiet \
          $([ -n "${GITHUB_BASE_REF+set}" ] && echo "--baseline-commit origin/${GITHUB_BASE_REF:-main}") \
          --json \
      | jq -r '.results[] | "\(.extra.severity[0:1]):\(.path):\(.end.line) \(.extra.message | sub("\n";"<br/>";"g"))<br><br>Source: \(.extra.metadata.source)<br><br>,\(if .extra.metadata.assignees then .extra.metadata.assignees else "null" end | sub("\n";" ";"g"))"' \
      | grep -f $SCRIPTPATH/semgrep_rules/blocklist.txt -v \
      | $SCRIPTPATH/cleaner.rb --assignees) 2> reviewdog.semgrep.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  sveltegrep:
    name: sveltegrep
    cmd: |
      set -e
      (python3 $SCRIPTPATH/scripttagextractor.py \
        --suffix .extractedscript.js \
        --ignore-no-files \
        --all-changed-files-suffix .html && \
      python3 $SCRIPTPATH/scripttagextractor.py \
        --add-suffix-to-original .extractedscript.html \
        --suffix .extractedscript.ts \
        --ignore-no-files \
        --all-changed-files-suffix .svelte && \
      semgrep \
        -c $SCRIPTPATH/semgrep_rules/generated/oss/vulns.yaml \
        -c $SCRIPTPATH/semgrep_rules/generated/nonfree/vulns.yaml \
        -c $SCRIPTPATH/semgrep_rules/generated/oss/audit.yaml \
        -c $SCRIPTPATH/semgrep_rules/generated/nonfree/audit.yaml \
        $(find $SCRIPTPATH/semgrep_rules -name '*.yml' -or -name '*.yaml' -not -path "$SCRIPTPATH/semgrep_rules/generated/*" | sed 's/^/-c /g') \
        --metrics=off \
        --json \
        --quiet \
        --no-git-ignore \
        '--include=*.extractedscript.ts' \
        '--include=*.extractedscript.js' \
        '--include=*.extractedscript.html' \
        ./ \
        | jq -r '.results[] | "\(.extra.severity[0:1]):\(.path):\(.end.line) \(.extra.message | sub("\n";"<br/>";"g"))<br><br>Source: \(.extra.metadata.source)<br><br>,\(if .extra.metadata.assignees then .extra.metadata.assignees else "null" end | sub("\n";" ";"g"))"' \
        | grep -f $SCRIPTPATH/semgrep_rules/blocklist.txt -v \
        | $SCRIPTPATH/cleaner.rb --assignees --sveltegrep && \
      find . -type f -name '*.extractedscript.*' -delete) 2> reviewdog.sveltegrep.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  safesvg:
    name: safesvg
    cmd: |
      set -e
      (xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt $SCRIPTPATH/xmllint.sh \
      | egrep -f $SCRIPTPATH/dtd/blocklist.txt -v \
      | $SCRIPTPATH/cleaner.rb --svgo) 2> reviewdog.safesvg.stderr.log
    errorformat:
      - "%f:%l: %m"
  tfsec:
    name: tfsec
    cmd: |
      set -e
      (xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt | grep '\.tf$' | xargs -r -d '\n' dirname | sort -u \
      | xargs -r -d '\n' $SCRIPTPATH/tfsec.sh \
      | jq -r '.diagnostics[] | "\(.severity[0:1]):\(.location.path):\(.location.range.start.line) \(.message  | sub("\n";"<br/>";"g"))<br><br>source: \(.code.url)<br><br>"' \
      | $SCRIPTPATH/cleaner.rb) 2> reviewdog.tfsec.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  brakeman:
    name: brakeman
    cmd: |
      set -e
      (if xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt | grep -q '\.rb$'; then
        bundle exec brakeman --quiet \
          --no-exit-on-warn \
          --no-exit-on-error \
          --skip-files vendor/ \
          --skip-libs \
          --force \
          --format json \
        | jq -r '.warnings[] | "\(.confidence[0:1]):\(.file):\(.line) \(.message | sub("\n";"<br/>";"g"))<br><br>Source: \(.link)"' \
        | $SCRIPTPATH/cleaner.rb
      fi) 2> reviewdog.brakeman.stderr.log 
    errorformat:
      - "%t:%f:%l %m"
  npm-audit:
    name: npm-audit
    cmd: |
      set -e
      (python3 $SCRIPTPATH/npm-audit.py \
      | $SCRIPTPATH/cleaner.rb) 2> reviewdog.npm-audit.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  pip-audit:
    name: pip-audit
    cmd: |
      set -e
      (python3 $SCRIPTPATH/pip-audit.py \
      | $SCRIPTPATH/cleaner.rb) 2> reviewdog.pip-audit.stderr.log 
    errorformat:
      - "%t:%f:%l %m"
