name: 'Security Action (hotwords)'
description: 'Check if the PR body contains hotwords'
inputs:
  hotwords:
    description: body hotwords which should trigger the action
    default: |
      password
      cryptography
      login
      policy
      safebrowsing
      safe browsing
      csp
      url parse
      urlparse
      :disableDigestUpdates
      pinDigest
  debug:
    description: enables debug output for this action
    required: false
  enabled:
    description: may disable the whole action, big red button for emergency cases
    default: "true"
outputs:
  assigner:
    value: antani
    description: |
      A JSON object to be passed as input to the meta-assigner action.
      Check the README.md for the format
runs:
  using: 'composite'
  steps:
    - id: description-contains-hotwords
      if: ${{ inputs.enabled == 'true' && github.actor != 'renovate[bot]' }}
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      env:
        HOTWORDS: ${{ inputs.hotwords }}
      with:
        script: |
              const { HOTWORDS } = process.env;
              const hotwords = HOTWORDS.split('\n').map(s => s.trim()).filter((s) => s !== '');

              console.log("hotwords: %s", hotwords);

              var query = `query($owner:String!, $name:String!, $prnumber:Int!) { 
                repository(owner:$owner, name:$name) { 
                  pullRequest(number:$prnumber) {
                    title
                    body
                  }
                }
              }`;
              const variables = {
                owner: context.repo.owner,
                name: context.repo.repo,
                prnumber: context.issue.number
              };
              const result = await github.graphql(query, variables);
              const content = (result.repository.pullRequest.title + result.repository.pullRequest.body).toLowerCase();
              console.log("Body: %s", content);

              const ret = hotwords.some((word) => content.includes(word));
              console.log("hotword hit: %s", ret);

              if (ret) {
                const m = `The security team is monitoring all repositories for certain keywords. This PR includes the word(s) "${hotwords.filter(word => content.includes(word)).join(', ')}" and so security team members have been added as reviewers to take a look.<br/>
                  No need to request a full security review at this stage, the security team will take a look shortly and either clear the label or request more information/changes.<br/>
                  Notifications have already been sent, but if this is blocking your merge feel free to reach out directly to the security team on Slack so that we can expedite this check.`

                var query = `query($owner:String!, $name:String!, $prnumber:Int!) { 
                  repository(owner:$owner, name:$name) { 
                    pullRequest(number:$prnumber) {
                      comments(first: 100) {
                        nodes {
                          author { login }
                          body
                          bodyHTML
                          bodyText
                        }
                      }
                    }
                  }
                }`;
                const messages = (await github.graphql(query, variables)).repository.pullRequest.comments.nodes.map(node => node.body);

                if (!messages.includes(m))
                  github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: m
                  });
              }
                
              return ret;
